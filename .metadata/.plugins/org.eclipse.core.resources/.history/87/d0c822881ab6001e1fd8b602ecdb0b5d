package com.myweb.www.controller;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.myweb.www.domain.BoardVO;
import com.myweb.www.domain.FileVO;
import com.myweb.www.domain.PagingVO;
import com.myweb.www.handler.FileHandler;
import com.myweb.www.handler.PagingHandler;
import com.myweb.www.service.BoardService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RequiredArgsConstructor
@RequestMapping("/board/*")
@Slf4j
@Controller
public class BoardController {
	
	private final BoardService bsv;
	private final FileHandler fn;
	
	@GetMapping("/")
	public void indexPage() {
	}
	
	@GetMapping("/register")
	public void registerPage() {}
	
	@PostMapping("/register")
	public String register(BoardVO bvo, @RequestParam(name="files", required = false)MultipartFile[] files) {
		log.info("@@@@@@@@@@@@@@@@ bvo >>> "+bvo);
		List<FileVO> flist = null;
		
		//FileHandler 생성  multipartfile -> flist
		if(files[0].getSize() > 0) {
			flist = fh.uploadFiles(files);
		}
		
		bsv.insert(bvo);
		
		return "redirect:/board/list";
	}
	
	@GetMapping("/list")
	public String listPage(Model m, PagingVO pgvo) {
		log.info("@@@@@@@@@@@@ pagingVO >>>>"+pgvo);
		//페이징 처리
		List<BoardVO> list = new ArrayList<BoardVO>();
		list = bsv.selectAll(pgvo);
		//totalCount 구하기
		int totalCount = bsv.getTotalCount(pgvo);
		PagingHandler ph = new PagingHandler(pgvo, totalCount);
		m.addAttribute("list", list);
		m.addAttribute("ph", ph);
		return "/board/list";
	}
	
	@GetMapping({"/detail"})
	public void detailPage(@RequestParam("bno") long bno, Model m) {
		m.addAttribute("bvo", bsv.getDetail(bno)); 
		
	}
	
	@GetMapping("/modify")
	public void modifyPage(@RequestParam("bno") long bno, Model m) {
		m.addAttribute("bvo", bsv.getModify(bno)); 
	}
	
	@PostMapping("/modify")
	public String modify(BoardVO bvo) {
		bsv.update(bvo);
		return "redirect:/board/list";
	}
	
	@GetMapping("/delete")
	public String delete(@RequestParam("bno") long bno) {
		bsv.delete(bno);
		return "redirect:/board/list";
	}
	
	
	
}
